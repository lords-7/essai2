# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `whirly` gem.
# Please instead update this file by running `bin/tapioca gem whirly`.


# source://whirly//lib/whirly/version.rb#3
module Whirly
  class << self
    # save options and preprocess, set defaults if value is still unknown
    #
    # source://whirly//lib/whirly.rb#114
    def configure(**options); end

    # frames can be generated from enumerables or procs
    #
    # source://whirly//lib/whirly.rb#85
    def configure_frames(spinner); end

    # set spinner directly or lookup
    #
    # source://whirly//lib/whirly.rb#55
    def configure_spinner(spinner_option); end

    # @return [Boolean]
    #
    # source://whirly//lib/whirly.rb#49
    def configured?; end

    # @return [Boolean]
    #
    # source://whirly//lib/whirly.rb#45
    def enabled?; end

    # source://whirly//lib/whirly.rb#240
    def initialize_color; end

    # source://whirly//lib/whirly.rb#249
    def next_color; end

    # Returns the value of attribute options.
    #
    # source://whirly//lib/whirly.rb#43
    def options; end

    # source://whirly//lib/whirly.rb#215
    def render(next_frame = T.unsafe(nil)); end

    # source://whirly//lib/whirly.rb#225
    def render_prefix; end

    # source://whirly//lib/whirly.rb#233
    def render_suffix; end

    # source://whirly//lib/whirly.rb#194
    def reset; end

    # source://whirly//lib/whirly.rb#132
    def start(**options); end

    # Returns the value of attribute status.
    #
    # source://whirly//lib/whirly.rb#42
    def status; end

    # Sets the attribute status
    #
    # @param value the value to set the attribute status to.
    #
    # source://whirly//lib/whirly.rb#42
    def status=(_arg0); end

    # source://whirly//lib/whirly.rb#180
    def stop(stop_frame = T.unsafe(nil)); end

    # - - -
    #
    # source://whirly//lib/whirly.rb#203
    def unrender; end
  end
end

# source://whirly//lib/whirly.rb#14
Whirly::CLI_COMMANDS = T.let(T.unsafe(nil), Hash)

# source://whirly//lib/whirly.rb#19
Whirly::DEFAULT_OPTIONS = T.let(T.unsafe(nil), Hash)

# source://whirly//lib/whirly.rb#35
Whirly::SOFT_DEFAULT_OPTIONS = T.let(T.unsafe(nil), Hash)

# source://whirly//lib/whirly/spinners.rb#2
module Whirly::Spinners; end

# source://whirly//lib/whirly/spinners/cli.rb#5
Whirly::Spinners::CLI = T.let(T.unsafe(nil), Hash)

# source://whirly//lib/whirly/spinners/whirly.rb#5
Whirly::Spinners::WHIRLY = T.let(T.unsafe(nil), Hash)

# source://whirly//lib/whirly/version.rb#4
Whirly::VERSION = T.let(T.unsafe(nil), String)
